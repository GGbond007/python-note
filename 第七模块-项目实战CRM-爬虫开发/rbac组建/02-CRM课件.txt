https://www.cnblogs.com/wupeiqi/articles/9169292.html


源码序列
0 源码示例：猛击下载
1 《客户管理》系统截图：基本增删改查和Excel导入源码下载：猛击这里\
2 已录入权限数据源码下载：猛击这里
3 含用户登录权限源码下载：猛击这里（简易版）
4 含用户登录权限源码下载：猛击这里
5 示例源码下载：猛击这里（无默认选中）
6 示例源码下载：猛击这里（含默认选中）
7 示例源码下载：猛击这里 # 二级菜单
8 示例源码下载：猛击这里（路飞线上录制代码示例） # 二级菜单
9 示例源码下载：猛击这里  # 客户关管理之默认展开非菜单URL
10 示例源码下载：猛击这里（路飞线上录制代码示例）# 客户关管理之默认展开非菜单URL
11 示例源码下载：猛击这里 # 客户管理之访问路径导航
12 示例源码下载：猛击这里  # 客户管理之 权限粒度控制按钮级别
13 示例源码下载：猛击这里（路飞线上录制代码示例）# 客户管理之 权限粒度控制按钮级别
14 示例源码下载：猛击这里（用户和角色管理）  #客户管理之 编辑权限和分配权限
15 示例源码下载：猛击这里（菜单和权限管理之一级菜单）
16 示例源码下载：猛击这里（菜单和权限管理之二级菜单）
17 示例源码下载：猛击这里（菜单和权限管理之三级菜单）
18 源码示例下载：猛击这里（django formset实现批量添加和编辑）  luffy_formset
19 luffy_permission-autourls  自动发现项目汇中的所有url  
20 源码示例下载：猛击这里（批量操作权限的显示）
21 源码示例下载：猛击这里（权限分配）
22 最终版组件下载：rbac.zip  #RBAC组件应用及文档     rbac
23 源码示例下载：rbac组件应用之主机管理系统【auto_luffy.zip】 auto_luffy
----------------------------------------------------------------------
大目标: crm系统
	- 权限
	- stark组件
	- crm业务
步骤:
1. 创建 django project , luffy_permission
2. 两个app
	- rbac, 权限组件
	- web , 销售管理系统
3. app : rbac
4. app: web
5. 两个app的整合
6. 快速完成一个基本权限控制, 在 示例代码: <已录入权限数据源码下载: 猛击这里> 开始开发
7. 功能的完善, 将权限相关的功能放在rbac应用下,以便于以后的组件的应用.
总结: 6/7属于权限控制
8. 动态菜单的功能
	- 一级菜单,如何实现动态显示一级菜单?
		a. 表结构修改+录入菜单数据
		b. 获取菜单信息并保存到session
		c. 模板中显示菜单信息(session)
			ps: inclusion_tag
		扩展: 如何默认选中菜单
	- 二级菜单	
		a. session中存储的菜单信息结构:
			{
				1:{ title:'信息管理',
				      icon:'x1',
				      children:[
					{'title':'客户列表','url':'/customer/list/'},
					{'title':'账单列表','url':'/account/list/'},
				   ]},
				2:{ title:'用户信息',
				      icon:'x1',
				      children:[
					{'title':'客户列表','url':'/userinfo/list/'},
				   ]},
				
			}
		b. 数据库表结构:
			class Menu(models.Model):
				"""
				菜单
				"""
				title = models.CharField(verbose_name='菜单', max_length=32)
				icon = models.CharField(verbose_name='图标', max_length=32)

				def __str__(self):
					return self.title


			class Permission(models.Model):
				"""
				权限表
				"""
				title = models.CharField(verbose_name='标题', max_length=32)
				url = models.CharField(verbose_name='含正则的URL', max_length=128)

				menu = models.ForeignKey(verbose_name='菜单', to='Menu', null=True, blank=True, help_text='null表示非菜单')

				def __str__(self):
					return self.title

		c. 页面显示二级菜单.
			inclusion_tag中循环显示.

9. 点击非菜单的权限时,默认选中或默认展开.
	当点击某个不能成为菜单的权限时,指定一个可以成为菜单的权限,让其默认选中以及展开.
	a. 数据库设计
	b. 思路
		- 登陆,做权限和菜单的初始化:
			- 获取菜单信息
				{
					1:{
						'title':'信息管理',
						'icon': 'fa-cmaera-retro',
						'class':'',
						'children':[{
							{'id':1,'url':'/customer/list/','title':'客户列表',class='active'}  # 可以做菜单的权限id
						}]
					},
					2:{......}
				}
			- 获取权限信息
				[
					{'id':1,'url':'/customer/list/','pid':null}, # 客户列表:可做菜单
					{'id':2,'url':'/customer/add/','pid':1}      # 添加客户:不可
				]
		- 再次来访问
			- 中间件进行权限的效验(根据权限信息)
				获取id或pid(应该被选中的可以做菜单的权限id)
		- 模板中使用inclustion_tag生成动态菜单(根据菜单信息动态生成)
10. 路径导航
11. 权限粒度控制到按钮
总结:
	- 权限控制
	- 动态菜单 
	- 权限的分配
	问题: 以前你是如果做的权限分配, 给某个用户分配一个角色？某个人分配某个全线？
	答案： django admin进行录入

12. 权限分配
	a. 角色管理
		知识点
		- ModeForm
		- 根据namespace 和name 反向解析生成 URL
		- 模版的查找顺序
	b. 用户管理
		知识点
		- ModeForm
			- 字段的自定制
			- 钩子方法
			- 错误提示(中文)
			- 重写 __init__ 方法 给所有字段添加属性(form—control)
		- 根据namespace 和name 反向解析生成 URL
		- 模版的查找顺序
	c. 菜单和权限管理
		视频讲解: 一级 , 二级 , 权限
		知识点:
			- 保留URL中的原搜索条件
			- 模板中整形转换成字符串  1|safe
			- ModelForm 定制radio
			- ModelForm 显示默认值
			- ModelForm save之前对其instance进行修改
			- BootStrapModelForm基类
	d. 批量的权限操作
		- formset
			- 什么是formset?
				答: Form组件或ModelForm用于做一个表单验证, formset用于做多个表单验证的组件.
			- 应用场景?
				答: 批量操作.
			- 如何实现用formset?
				答: 见示例代码
		- 自动发现项目中的URL
			- 问题: 给你一个项目,请帮我获取当前项目中都有哪些URL以及name    rbac:permission_list
			- 实现思路.
			- 具体实现: 见示例代码
		-------------------------------------
		 1. 获取项目中所有权限 set1
		 2. 去数据库中获取已经录入的所有权限 set2
		 
		 情况一:  自动发现 》 数据库---》实现批量添加  ps: 通过name进行对比
		 	set1 - set2  ==》 添加
			+ formset
		 情况二: 数据库 》 自动发现  --》 实现批量删除
		 	set2 - set1  ==》 删除
		 情况三: 自动发现有 》 数据有  -- 实现批量更新
		 	set3 =  set1 & set2  ==》更新
			+ formset
		--------------------------------------
		知识点:
			- formset(ModelFormSet)	
			- 自动发现项目中的URL
			- 唯一约束错误信息

	e. 分配权限
		- 展示用户、角色、权限信息
		- 选择用户、角色时,页面上的默认选项.
		- 角色和权限分配[保存]

		- 知识点总结:
			- 数据类型设置引用
			menu_list= [
				{'id':1,'title':'菜单1'},
				{'id':2,'title':'菜单2'},
				{'id':3,'title':'菜单3'},
			]
			menu_dict = {}
			"""
			menu_list= [
				1:{'id':1,'title':'菜单1'},
				2:{'id':2,'title':'菜单2'},
				3:{'id':3,'title':'菜单3'},
			]
			"""
			for item in menu_list:
				menu_dict[item['id]] = item
				# menu_dict[2]['title'] = '666'
				menu_dict[2]['children'] = [11,22]
				print(menu_list)

				
			- M2M关系表的更新

13. 编写使用文档(主机管理程序)














