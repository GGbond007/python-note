考试10分钟：
	1、我们为何将内存称之为主存
	2、x86-64代表的含义？简述cpu的向下兼容性
	3、内核态与用户态代表的含义是什么？在什么情况下会发生用户态与内核态的切换
	4、什么是IO延迟时间？
	5、操作系统的启动流程
	6、应用程序的启动流程

要求：
	用笔写在纸上，拍照发给辅导老师

	深圳校区=========》王闻老师
	北京校区=========》梦鸽
	上海校区=========》tank老师

上节课复习：
	主存：软件运行起来以后，产生的所有的数据都优先存储于内存

	cpu
		寄存器
		高速缓存
	内存
	硬盘（机械硬盘）


	操作系统
	驱动程序
	设备控制器
	设备本身

	cpu                                       cpu
	ROM：BIOS                                 RAM
	CMOS：存放BIOS程序产生的数据               本地硬盘


	应用程序
	操作系统
	硬件


人========编程语言=======》计算机
人类的程序   -----  01010101010
print('Hello')


编译型------》Gcc编译器--------》机器语言
解释型------》解释器（解释一行执行一行）

今日内容：python入门（全为重点）
	1、编程语言介绍
		分类：
			机器语言
			汇编语言
			高级语言（编译型、解释型号）

		总结：
			#1、执行效率：机器语言>汇编语言>高级语言（编译型>解释型）

			#2、开发效率：机器语言<汇编语言<高级语言（编译型<解释型）

			#3、跨平台性：解释型具有极强的跨平台型



	2、python介绍
		python语言：指的是pyton的语法风格
		python解释器：专门用来识别python这门语言的语法并解释执行的

	3、解释器多版本共存
		设置环境变量
			windows
				win10：参考视频
				win7：C:\python27;C:\python27\scripts;C:\a\b;D:\a\b;E:\a\b

			linux:
				vim /etc/profile
					PATH=$PATH:/usr/local/python38:/usr/local/python38
					export PATH

			mac:
				同linux

	4、运行python程序的两种方式
		1、交互式
			即时得到程序的运行结果，多用于调试
		2、脚本的方式
			把程序写到文件里(约定俗称文件名后缀为.py)，然后用python解释器解释执行其中的内容

			python3.8 python程序文件的路径


	5、一个python应用程序的运行的三个步骤（******）
		python3.8 C:\a\b\c.py  执行python程序经历三个步骤
			1、先启动python3.8解释器,此时相当于启动了一个文本编辑器
			2、解释器会发送系统调用，把c.py的内容从硬盘读入内存，此时c.py中的内容
				全部为普通字符，没有任何语法意义
			3、解释器开始解释执行刚刚读入内存的c.py的代码，开始识别python语法

		对比文本编辑器读取C:\a\b\c.py文件内容也经历了三个步骤
			1、先启动文本编辑器
			2、文本编辑器会发送系统调用，把c.py的内容从硬盘读入内存
			3、文本编辑会将刚刚读入内存的内容控制输出到屏幕上，让用户看到结果


		总结：
			二者在前两个阶段做的事情完全一致
			唯一不同的就是第三个阶段对读入内存的python代码的处理方式不同
	6、注释
		1、注释是对关键代码的解释说明
			单行注释：#
                # 这是一行xxx的代码
                print("hello")  # 这是一行xxx的代码

			多行注释：''''''  """"""
                """
                笔记
                """
		2、被注释的代码不会被执行
	7、IDE集成开发环境pycharm
		mac平台pycharm使用参考视频讲解
		windows平台pycharm使用参考博客https://zhuanlan.zhihu.com/p/108676916
			windows平台下相关配置
				选择pycharm对话框左上角File,然后点击settings，接下来的配置同mac平台














