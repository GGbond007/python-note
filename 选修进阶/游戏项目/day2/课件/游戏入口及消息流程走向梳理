1. 消息入口寻找
从客户端|浏览器发起请求 -- >nginx :8083(main....js)   -- >登录成功(8889端口,web服务) --> 客户端开始连接游戏后端(proxy)

游戏引擎:
四个启动文件:
python start_mastersingle.py     # 启动master节点
python start_proxy_1.py          # 启动proxy节点
python start_gate_1.py          # 启动gate节点
python start_room_1.py          # 启动游戏节点

master:  start_master_single.py -->  start_master.py  --> Master.start(python .... appmain.py)
proxy:  start_proxy_1.py     ---> appmain.py
gate:  start_gate_1.py       ---> appmain.py
room:  start_room_1.py       ---> appmain.py

proxy_1-> appmain.py  --- FFSever.config     ---> config.json/"servers/proxy_1"   -- >app: import proxy.start_up
				FFSever.start


start_up  -->
	remoteservice.py  --> 没干啥事
	controller.py   --> reactor(twisted框架事件循环) listenTCP  --> websocket_facotry
	-->protocol.py  --> CustomWebProxyFactory  --> WebSocketProtocol(猜测websocket消息通信在这个地方处理)


如何去印证自己的猜测:
	1. 跟着代码一层层跳转(对于函数代码理解能力要求较高,不推荐初学者)
	2. 打日志print|log
	3. 抛异常 raise exception
	所有的客户端到proxy的消息都会经过  onMessage方法

onMessage:   --- 消息入口
	消息解包    "iii", 第一个消息的长度, 第二个消息ID, 第三个版本号

今日作业:
proxy_service.callTarget 干了些啥, 消息如何分发
消息如何走到gate节点

施浩宇, 方贵全, 文舟, 方振强, 吴金凌, 高兴

				