{"name": "普通登录", "status": "failed", "statusDetails": {"message": "AssertionError: assert not {\"root['code']\": {'new_value': '0', 'old_value': '1'}}\n +  where {\"root['code']\": {'new_value': '0', 'old_value': '1'}} = <built-in method get of DeepDiff object at 0x000001F90A4ED308>('values_changed', None)\n +    where <built-in method get of DeepDiff object at 0x000001F90A4ED308> = {'dictionary_item_added': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '0', 'old_value': '1'}}}.get\n +      where {'dictionary_item_added': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '0', 'old_value': '1'}}} = DeepDiff({'code': '1', 'message': 'success'}, {'code': '0', 'data': None, 'message': 'success'})", "trace": "self = <scripts.test_case.TestCase object at 0x000001F909CC34A8>\nitem = {'case_num': 'neeo_007', 'cookies': '', 'data': '{\"userName\": \"${neeo_002>request_params>userName}$\", \"password\": \"${neeo_003>request_data>password}$\"}', 'except': '{\"code\": \"1\", \"message\": \"success\"}', ...}\n\n    @pytest.mark.parametrize('item', excel_data_list)\n    def test_case(self, item):\n        logger().info('正在进行断言.....')\n        except_date, result = RequestsOperate(current_case=item, all_excel_data_list=excel_data_list).get_response_msg()\n        # print(DeepDiff(except_date, result))\n        allure.dynamic.title(item['title'])\n    \n        allure.dynamic.description(\n            \"<b style='color:red'>请求的url:</b>{}<hr />\"\n            \"<b style='color:red'>预期值: </b>{}<hr />\"\n            \"<b style='color:red'>实际执行结果: </b>{}<hr />\".format(item['url'], item['except'], result)\n        )\n    \n    \n>       assert not DeepDiff(except_date, result).get('values_changed', None)\nE       assert not {\"root['code']\": {'new_value': '0', 'old_value': '1'}}\nE        +  where {\"root['code']\": {'new_value': '0', 'old_value': '1'}} = <built-in method get of DeepDiff object at 0x000001F90A4ED308>('values_changed', None)\nE        +    where <built-in method get of DeepDiff object at 0x000001F90A4ED308> = {'dictionary_item_added': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '0', 'old_value': '1'}}}.get\nE        +      where {'dictionary_item_added': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '0', 'old_value': '1'}}} = DeepDiff({'code': '1', 'message': 'success'}, {'code': '0', 'data': None, 'message': 'success'})\n\nscripts\\test_case.py:41: AssertionError"}, "description": "<b style='color:red'>请求的url:</b>http://www.neeo.cc:6002/pinter/com/login<hr /><b style='color:red'>预期值: </b>{\"code\": \"1\", \"message\": \"success\"}<hr /><b style='color:red'>实际执行结果: </b>{'code': '0', 'message': 'success', 'data': None}<hr />", "attachments": [{"name": "log", "source": "dd2dbc5c-3c54-49a6-9664-cb863909b39c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "item", "value": "{'case_num': 'neeo_007', 'title': '普通登录', 'url': 'http://www.neeo.cc:6002/pinter/com/login', 'method': 'post', 'params': '', 'data': '{\"userName\": \"${neeo_002>request_params>userName}$\", \"password\": \"${neeo_003>request_data>password}$\"}', 'json': '', 'cookies': '', 'headers': '', 'except': '{\"code\": \"1\", \"message\": \"success\"}'}"}], "start": 1588236840306, "stop": 1588236840327, "uuid": "74af5df0-75b1-4ba1-bb7b-787488ebfb95", "historyId": "f85d11cb45817a68a7f5c045f034434d", "testCaseId": "26c298dcd4e08901cbba1d289c15c556", "fullName": "scripts.test_case.TestCase#test_case", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "LAPTOP-T3E8ATB8"}, {"name": "thread", "value": "556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_case"}]}